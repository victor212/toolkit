#!/bin/bash
################################################################################
# Common setting area
################################################################################
if [ "$TERM" == "xterm" ]; then
        export TERM=xterm-256color
fi

################################################################################
# My command area
################################################################################

function ___help()
{
	echo "sos: options"
	echo " 	-h : get help"
	echo " 	tips : get common tips"
	echo " 	mac : get mac tips"
	echo "Supported seft-defined commands:"
	echo " 	markcs"
	echo " 	clearcs"
	echo " 	mktags"

}

function ___common_tips()
{
	echo "This is my common tips"
	echo "ctags -R"
	echo "  :set tags=xxx"
	echo "cscope -Rbkq"
	echo "  :cs add cscope.out"

}

function ___mac_tips()
{
	echo "MAC serial tool"
	echo " 	screen /dev/tty.usbserial-xxxxx  115200"
}

function sos()
{
	# Need to clear builtin variables first
	OPTERR=""
	OPTIND=0
	OPTARG=""
	while getopts :h OPTION; do
		case $OPTION in
		h) 	#echo "optarg = " $OPTARG
			#echo "optind = " $OPTIND
			___help
			return;;
		?) 	echo "Invalid parameters"
			___help
		   	return;;
		esac
	done
# 	echo "optind = "$OPTIND

	# Keep rest parameters only 
	shift $(($OPTIND - 1))

	# No leading opt parameters
	#echo $1
	if [ "$1"x = ""x ]; then
		echo "No parameters, please get help: sos -h"
		return
	fi

	case $1 in
	tips) 	___common_tips
		;;
	mac) 	___mac_tips
		;;
	esac
}


export CS_SOURCE_FILE_DIR+=

function markcs()
{
	CS_SOURCE_FILE_DIR+=$(pwd)";"
	ALL_SRCS=${CS_SOURCE_FILE_DIR//;/ }
	for onepath in ${ALL_SRCS}
	do
		echo ${onepath}
	done
}

function clearcs()
{
	CS_SOURCE_FILE_DIR=""
}

function ___mkcscopefiles()
{
	ALL_SRCS=${CS_SOURCE_FILE_DIR//;/ }
	rm -rf cscope.files

	for onepath in ${ALL_SRCS}
	do
		echo ${onepath}
		find ${onepath} -name "*.[ch]" -o -name "*.cpp" >> cscope.files
	done

}

function mktags()
{
	rm -rf tags
	ALL_SRCS=${CS_SOURCE_FILE_DIR//;/ }
	for onepath in ${ALL_SRCS}
	do
		ctags -a -R ${onepath}
	done

	___mkcscopefiles
	rm -rf cscope.in.out cscope.out cscope.po.out
	cscope -Rbqk -i cscope.files
}

